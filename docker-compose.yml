version: '3.8'

services:
  mysql:
    image: arm64v8/mysql:8.0.29
    container_name: 'spring-boot-mysql'
    hostname: 'spring-boot-mysql'
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./.mysql:/var/lib/mysql:delegated
      - ./docker/provision/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - spring-boot-learning
    ports:
      - ${MYSQL_PORT}:3306
    command: --sql_mode="" --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-time-zone="UTC"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    restart: unless-stopped

  postgres:
    build:
      dockerfile: ./docker-postgresql-multiple-databases/Dockerfile
    container_name: 'spring-boot-postgres'
    hostname: 'spring-boot-postgres'
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:5432"
    environment:
      POSTGRES_MULTIPLE_DATABASES: ${DB_LIST}
      POSTGRES_USER: ${MYSQL_USERNAME}
      POSTGRES_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./.postgresql:/var/lib/postgresql/data
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      timeout: 20s
      retries: 10
    restart: unless-stopped

  zookeeper:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "12181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 9092
      ZOOKEEPER_TICK_TIME: 2000
      LOG_DIR: /tmp/logs
    networks:
      - spring-boot-learning
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "2181" ]
      interval: 2s
      timeout: 10s
      retries: 50

  kafka:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "bin/kafka-server-start.sh",
      "config/server.properties",
      "--override",
      "listeners=${KAFKA_LISTENERS}",
      "--override",
      "advertised.listeners=${KAFKA_ADVERTISED_LISTENERS}",
      "--override",
      "zookeeper.connect=${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    hostname: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    links:
      - zookeeper
    ports:
      - "${KAFKA_EXTERNAL_PORT}:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_M_R_B: "1147483648"
      KAFKA_NUM_PARTITIONS: "10"
    networks:
      - spring-boot-learning

networks:
  spring-boot-learning:
    name: sb-learning
    driver: bridge
